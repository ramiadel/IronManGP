/*
  This code was created on 25.6.2022
  By: Marwa Abdullah , Ahmed Hassan
  Last Updated : 27.6.2022
  **Note**: Please Down grade esp8266 version to 2.3.0 in boardmanager .
*/

#include <Firebase.h>  
#include <FirebaseArduino.h>  
#include <FirebaseCloudMessaging.h>  
#include <FirebaseError.h>  
#include <FirebaseHttpClient.h>  
#include <FirebaseObject.h>  
#include <ESP8266WiFi.h>  
/********************Firebase Configurations***************************/
#define FIREBASE_HOST "ironman-ef172-default-rtdb.firebaseio.com"
#define FIREBASE_AUTH "YbzQWwQva2mMzlG8asPDgJygbpCfv2QkrNlk7RZR" 
/********************WIFI Configurations*******************************/
#define WIFI_SSID "hassan"  
#define WIFI_PASSWORD "33141018" 
/******************** Boatloader MACROS ******************************/
#define SESSION_CONTROL         0x10U
#define DOWN_REQ                0x34U
#define DATA_REQ                0x36U
#define TRANS_EXIT              0x37U

#define POS_RES                 0x10U
#define NEG_RES                 0x7FU
/********************Global Variables Declaration*********************/
int Res=0; // Response for UART communication
int DataCounter = 0;
int CurrDataBuffSize=0;
byte ByteCounter = 0;
byte AppCounter = 0;
byte DataDone= 0;
int  BufferCounter=0;
/************************ Applicationn Buffers ************************/
byte AppInfo[12];
byte AppData[1024];
/********************Functions ProtoTypes***************************/
void getAppInfo();
void getAppData();
/****************************Setup*********************************/
void setup() {  
  Serial.setTimeout(2000);
  Serial.begin(9600);  
  // connect to wifi.  
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);  
  Serial.print("connecting");  
  while (WiFi.status() != WL_CONNECTED) {  
    Serial.print(".");  
    delay(500);  
  }  
  Serial.println();  
  Serial.print("connected: ");  
  Serial.println(WiFi.localIP());  
  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);  
}  
/***************************Main Loop*******************************/  
void loop() {  
//  delay(500); 
  if(Firebase.getString("/AppStatus")=="Flash"){
    //Serial.println("HELLO");
    Serial.write(SESSION_CONTROL);
    Firebase.setString("/AppStatus","Busy");  
  }
  else if(Firebase.getString("/AppStatus")=="Busy"){
    if(Serial.available() > 0)
  {
    Res = Serial.read();
    if(Res == (POS_RES + SESSION_CONTROL))
    {
//      delay(1000);
      getAppInfo();
//      for(int i=0;i<12;i++)
//      {
//          Serial.println(AppInfo[i]);
//
//      }
      Res = 0;
      Serial.write(DOWN_REQ);
      Serial.write(AppInfo,12);
    }
    if(Res == (POS_RES + DOWN_REQ))
    {
      Res = (POS_RES + DATA_REQ); 
    }
    if(Res == (POS_RES + DATA_REQ))
    {
      Serial.write(DATA_REQ);
      Res = 0;
//      delay(1000); 
      if(!DataDone){
        getAppData();
        //Serial.println("BufferDoneServer");
        Serial.write(AppData,BufferCounter);
      }
      else{
        
        Firebase.setString("/AppStatus","Done");
        Serial.write(TRANS_EXIT);
      }
    }
    
  }
  }
    
}  
void getAppData(){
  //Serial.println("IN App Data");
 // Serial.println(Firebase.getInt("/DataSize"));
  int BuffCounter=0;
  if(Firebase.getInt("/DataSize") >= 1024){
    //Serial.println("IN first cond Data");
    CurrDataBuffSize=1024;
    BufferCounter=1024;
    Firebase.setInt("/DataSize",(Firebase.getInt("/DataSize")-1024));
    if (Firebase.getInt("/DataSize") == 0){
      // Finished all data now raise flag 
      DataDone = 1;
       }
  } 
  
  else if(Firebase.getInt("/DataSize") < 1024){
    //Serial.println("IN second cond Data");
    // last chunck of data
    CurrDataBuffSize=Firebase.getInt("/DataSize");
    BufferCounter = CurrDataBuffSize;
    Firebase.setInt("/DataSize",0);
    // Finished all data now raise flag 
    DataDone = 1;
  }
 
  while(CurrDataBuffSize){
    //Serial.println("/data/"+String(DataCounter));
    //Serial.println(Firebase.getInt("/data/"+String(DataCounter)));
    AppData[BuffCounter] = (byte)Firebase.getInt("/data/"+String(DataCounter));
    Firebase.setInt("/DataIndex/"+String(DataCounter),DataCounter);
    BuffCounter++;
    DataCounter++;
    CurrDataBuffSize--;

  }
}
void getAppInfo(){
  while(ByteCounter<12)
  {
  
  if(ByteCounter <4){
      //Serial.println(Firebase.getInt("/AppInfo/entry_point/"+String(ByteCounter)));
      AppInfo[AppCounter]=(byte)Firebase.getInt("/AppInfo/entry_point/"+String(ByteCounter));
      AppCounter++;
      ByteCounter++;}
   else if (ByteCounter >=4 && ByteCounter < 8){
      //Serial.println(Firebase.getInt("/AppInfo/App_size/"+String(ByteCounter-4)));
      AppInfo[AppCounter]=(byte)Firebase.getInt("/AppInfo/App_size/"+String(ByteCounter-4));
      AppCounter++;
      ByteCounter++;  
   }
   else if (ByteCounter >=8 && ByteCounter < 12){
      //Serial.println(Firebase.getInt("/AppInfo/first_add/"+String(ByteCounter-8)));
      AppInfo[AppCounter]=(byte)Firebase.getInt("/AppInfo/first_add/"+String(ByteCounter-8));
      AppCounter++;
      ByteCounter++;
      
   }

  }
}
